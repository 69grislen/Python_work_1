#Копирование списка

# Чтобы скопировать список, создайте сегмент, включающий весь исходный список
# без указания первого и второго индекса ([:]). Эта конструкция создает сегмент,
# который начинается с первого элемента и завершается последним; в результате
# создается копия всего списка.

#По сути список это переменная имеющая в значении обьекты заключенные в []  !!!!!!

my_foods = ['pizza', 'falafel', 'carront cake']  #создали список (моих любимых блюд)
friend_foods = my_foods[:]  #создали список любимых блюд друга в значение которого скопированный список my_foods

my_foods.append("cannoli")  #Добавили новые значения в списки чтобы их отличить
friend_foods.append("ice cream")

print("Мои любимые блюда это:")
print(my_foods)

print("\n У моего друга любимые блюда это:")
print(friend_foods)

#
# Не работает:
# friend_foods = my_foods
my_foods = ['pizza', 'falafel', 'carront cake']
friend_foods = my_foods

my_foods.append("cannoli")
friend_foods.append("ice cream")

print("Мои любимые блюда это:")
print(my_foods)

print("\n У моего друга любимые блюда это:")
print(friend_foods)

# Вместо того чтобы сохранять копию my_foods в friend_foods в точке , мы задаем friend_foods равным my_foods. Этот синтаксис в действительности сообщает
# Python, что новая переменная friend_foods должна быть связана со списком, уже
# хранящимся в my_foods, поэтому теперь обе переменные связаны с одним списком.

#Другими словами мы не скопировали значение те список , а прировняли и второй список зависит от значения первого
#а значит их теперь не отличить


