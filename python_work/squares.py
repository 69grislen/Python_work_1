#Список квадратов всех целых чисел от 1 до 10
squares =[] #Сначала создали пустой список
for value in range(1,11):  #Создали цикл с range()
    square = value ** 2    #В переменной square сохр значение value возведенное во вторую степень
    squares.append(square) #Каждое новое знач square сохр и присоединяется к списку squares
print(squares)   #Вывели список с новыми значениями

#Более компактный код
print("Более компактный код")

squares =[]
for value in range(1,11):
    squares.append(value**2)
print(squares)
#Обошлись без временной переменной
#Не забудь что .append() это добавление в переменную или список !!!!!!!
#value это значение , которое нужно отформатирвоать или изменить!!!!!!
#range() это функция создающая последовательность чисел типа int (целых)
#от числа start до числа stop , те (1,11) ТУТ ЕСТЬ СМЕЩЕНИЕ НА 1 НЕ ЗАБУДЬ !!!!

#Иногда использование временной переменной упрощает чтение кода;
#в других случаях оно приводит лишь к напрасному удлинению кода. Сначала
#сосредоточьтесь на написании четкого и понятного кода, который делает именно
#то, что нужно, и только потом переходите к анализу кода и поиску более эффективных решений.


print("Простая статистика с числовыми списками")
#Некоторые функции Python предназначены для работы с числовыми списками.
#Например, вы можете легко узнать минимум, максимум и сумму числового списка:

digits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]  #Числовой список
print(min(digits))  #Минимум из списка

print(max(digits))  #Максимум из списка

print(sum(digits))  #Сумма списка

#Генераторы списков
#В следующем примере список квадратов, знакомый вам по предыдущим примерам,
#строится с использованием генератора списка
print("Генераторы списков")

squares = [value**2 for value in range(1,11)]
print(squares)

# Чтобы использовать этот синтаксис, начните с содержательного имени списка,
# например squares. Затем откройте квадратные скобки и определите выражение
#для значений, которые должны быть сохранены в новом списке. В данном примере это выражение value**2, которое возводит значение во вторую степень. Затем
#напишите цикл for для генерирования чисел, которые должны передаваться выражению, и закройте квадратные скобки. Цикл for в данном примере — for value
#in range(1,11) — передает значения с 1 до 10 выражению value**2. Обратите внимание на отсутствие двоеточия в конце команды for.


