# Команды if
# Команда if в языке Python позволяет проверить
# текущее состояние программы и выбрать дальнейшие действия в зависимости от
# результатов проверки.

cars = ['audi', 'bmw', 'subaru', 'toyota']  #есть список

for car in cars:
    if car == 'bmw':   # if - если  ;  == это проверка на равенство !!!!!
        print(car.upper())  # все буквы большие
    else:      #else это в противном (другом) случае !!!!!
        print(car.title())  #в другом случае только первая буква Большая

# проверяет, содержит ли car значение 'bmw'. Если
# проверка дает положительный результат, то значение выводится в верхнем регистре.
# Если car содержит все, что угодно, кроме 'bmw', то при выводе значения
# применяется капитализация

# Проверка условий:
# В каждой команде if центральное место занимает выражение,
# результатом которого является логическая истина (True) или логическая ложь (False);
# Python решает, должен
# ли выполняться код в команде if. Если результат условия равен True, то Python
# выполняет код, следующий за командой if. Если же будет получен результат False,
# то Python игнорирует код, следующий за командой if.


#Проверка равенства  (==) используется вот этот знак.

car = 'bmw'  #тут присмаивается значение 'bmw'
car == 'bmw'   # а тут проверяет, равно ли значение car строке 'bmw'
print(car)  # True

# Если car принимает любое другое значение вместо 'bmw', проверка возвращает False:
car = 'audi'
car == 'bmw'
print(car) #False
#в IDLE от python это лучше видно и наглядней


#Проверка равенства без учёта регистра
# В языке Python проверка равенства выполняется с учетом регистра. Например, два
# значения с разным регистром символов равными не считаются:

car = 'Audi'
car == 'audi'
#В IDLE python выводится False

car = 'Audi'
car.lower() == 'audi'   # проверка без учёта регистра
#В IDLE python выведится True тк мы применили метод .lower() и он перебрал значение в нижнем регистре
# В этом случае проверка выполняется без учёта регистра !!!!!
#Те car.lower() == 'audi' тоже самое что и audi == audi
#в левой части значение с 'Audi' сменилось на 'audi'












