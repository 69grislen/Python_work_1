# Программисты Python выработали ряд соглашений по стилю, чтобы весь код имел
# хотя бы отдаленно похожую структуру. Научившись писать «чистый» код Python,
# вы сможете понять общую структуру кода Python, написанного любым другим
# программистом, соблюдающим те же рекомендации.

# Одним из самых старых PEP является документ
# PEP 8 с рекомендациями по стилевому оформлению кода. PEP 8 довольно длинный, но большая часть документа посвящена более сложным программным структурам, нежели те, которые встречались вам до настоящего момента.
# Руководство по стилю Python было написано с пониманием того факта, что код читается чаще, чем пишется. Вы пишете свой код один раз, а потом начинаете читать
# его, когда переходите к отладке. При расширении функциональности программы
# вы снова тратите время на чтение своего кода. А когда вашим кодом начинают
# пользоваться другие программисты, они тоже читают его.

# !!Выбирая между написанием кода, который проще пишется, и кодом, который!!
# !!проще читается, программисты Python почти всегда рекомендуют второй вариант.!!
# !!Следующие советы помогут вам с самого начала писать чистый, понятный код.!!


# Смешение табуляций и пробелов в файле может создать проблемы, сильно затрудняющие диагностику.
# Если вы думаете, что в программе табуляции смешались
# с пробелами, в большинстве редакторов существует возможность преобразования
# всех табуляций в пробелы.

# !!!Пока вы учитесь,
# !!!длина строки в коде не так важна, но учтите, что при совместной работе в группах
# !!!почти всегда соблюдаются рекомендации PEP 8. В большинстве редакторов можно
# !!!установить визуальный ориентир (обычно вертикальную линию на экране), показывающий,
# !!!где проходит граница.


# !!!Пустые строки не влияют на работу кода, но отражаются на его удобочитаемости.
# Интерпретатор Python использует горизонтальные отступы для интерпретации
# смысла кода, но игнорирует вертикальные интервалы.
# Обычно 1 или 2 пустых строки не более !!!


# PEP 8 содержит много других рекомендаций по стилю, но эти рекомендации в основном относятся к программам более сложным, чем те, которые вы пишете на
# данный момент. По мере изучения более сложных возможностей Python я буду
# приводить соответствующие фрагменты рекомендаций PEP 8.
